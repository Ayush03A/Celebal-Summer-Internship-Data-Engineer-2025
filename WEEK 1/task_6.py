# -*- coding: utf-8 -*-
"""Task 6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aZVom_NaBMZ5uLn7vztipMA_XGMMqLLy
"""

#Problem 6

from itertools import combinations

def solve():
    n = int(input())
    # Read letters as a list of characters
    letters = list(input().split()[0])
    k = int(input())

    # Find all combinations of k indices
    indices = list(range(n))
    all_combinations = list(combinations(indices, k))

    # Count combinations with at least one 'a'
    count_with_a = 0
    for combo in all_combinations:
        has_a = False
        for index in combo:
            if letters[index] == 'a':
                has_a = True
                break
        if has_a:
            count_with_a += 1

    # Calculate probability
    total_combinations = len(all_combinations)
    probability = count_with_a / total_combinations

    print(f"{probability:.4f}")

solve()